Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
from mpl_toolkits.mplot3d import Axes3D

import matplotlib.pyplot as plt

def plotlines(vertices):
    edges = [
        [0, 1], [1, 2], [2, 3], [3, 0],
        [4, 5], [5, 6], [6, 7], [7, 4],
        [0, 4], [1, 5], [2, 6], [3, 7]
    ]
    for edge in edges:
        plt.plot(vertices[0, edge], vertices[1, edge], vertices[2, edge], 'k')

def main():
    x = np.array(list(map(float, input("Please input the center of the cube(e.g. 1,1,1): ").split(','))))
    d = float(input("Please input the half length of the edge of the cube: "))
    n = float(input("Please input image plane: "))

    projection = np.eye(4)
    projection[3, 3] = 0
    projection[3, 2] = 1 / n

    x = np.append(x, 1)
    proj_x = np.dot(projection, x)
    print(proj_x)
    print(projection)

    vertices = x[:3].reshape(3, 1) + d * np.array([
        [-1, -1, -1, -1, 1, 1, 1, 1],
        [-1, -1, 1, 1, -1, -1, 1, 1],
        [-1, 1, 1, -1, -1, 1, 1, -1]
    ])
    vertices = np.vstack((vertices, np.ones((1, 8))))
    proj = np.dot(projection, vertices)
    proj = proj[:3, :] / proj[3, :]

    p = max(abs(x[0] + d), abs(x[1] + d))
    # p = max(abs(x[0] + n), abs(x[1] + n))
    p1 = np.arange(-p, p + 1)
    X, Y = np.meshgrid(p1, p1)
    Z = n * np.ones((2 * int(p) + 1, 2 * int(p) + 1))

    fig = plt.figure()
    ax = fig.add_subplot(111, projection='3d')
    ax.plot_surface(X, Y, Z, alpha=0.5)

    ax.plot([0], [0], [0], 'r*', linewidth=4)
    plotlines(vertices)

    plotlines(proj)

    for i in range(8):
        ax.plot([vertices[0, i], 0], [vertices[1, i], 0], [vertices[2, i], 0], ':k*', linewidth=1)

    plt.show()

if __name__ == "__main__":
    main()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mStdinNotImplementedError[0m                  Traceback (most recent call last)
Cell [0;32mIn[1], line 59[0m
[1;32m     56[0m     plt[38;5;241m.[39mshow()
[1;32m     58[0m [38;5;28;01mif[39;00m [38;5;18m__name__[39m [38;5;241m==[39m [38;5;124m"[39m[38;5;124m__main__[39m[38;5;124m"[39m:
[0;32m---> 59[0m     [43mmain[49m[43m([49m[43m)[49m

Cell [0;32mIn[1], line 16[0m, in [0;36mmain[0;34m()[0m
[1;32m     15[0m [38;5;28;01mdef[39;00m [38;5;21mmain[39m():
[0;32m---> 16[0m     x [38;5;241m=[39m np[38;5;241m.[39marray([38;5;28mlist[39m([38;5;28mmap[39m([38;5;28mfloat[39m, [38;5;28;43minput[39;49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mPlease input the center of the cube(e.g. 1,1,1): [39;49m[38;5;124;43m"[39;49m[43m)[49m[38;5;241m.[39msplit([38;5;124m'[39m[38;5;124m,[39m[38;5;124m'[39m))))
[1;32m     17[0m     d [38;5;241m=[39m [38;5;28mfloat[39m([38;5;28minput[39m([38;5;124m"[39m[38;5;124mPlease input the half length of the edge of the cube: [39m[38;5;124m"[39m))
[1;32m     18[0m     n [38;5;241m=[39m [38;5;28mfloat[39m([38;5;28minput[39m([38;5;124m"[39m[38;5;124mPlease input image plane: [39m[38;5;124m"[39m))

File [0;32m/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/ipykernel/kernelbase.py:1281[0m, in [0;36mKernel.raw_input[0;34m(self, prompt)[0m
[1;32m   1279[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39m_allow_stdin:
[1;32m   1280[0m     msg [38;5;241m=[39m [38;5;124m"[39m[38;5;124mraw_input was called, but this frontend does not support input requests.[39m[38;5;124m"[39m
[0;32m-> 1281[0m     [38;5;28;01mraise[39;00m StdinNotImplementedError(msg)
[1;32m   1282[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_input_request(
[1;32m   1283[0m     [38;5;28mstr[39m(prompt),
[1;32m   1284[0m     [38;5;28mself[39m[38;5;241m.[39m_parent_ident[[38;5;124m"[39m[38;5;124mshell[39m[38;5;124m"[39m],
[1;32m   1285[0m     [38;5;28mself[39m[38;5;241m.[39mget_parent([38;5;124m"[39m[38;5;124mshell[39m[38;5;124m"[39m),
[1;32m   1286[0m     password[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[1;32m   1287[0m )

[0;31mStdinNotImplementedError[0m: raw_input was called, but this frontend does not support input requests.

